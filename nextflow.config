// NEXTFLOW MANIFEST
manifest {
    name                                  = 'haplotyping-KIV2-nf'
    version                               = '0.1.0'
    description                           = 'Nextflow pipeline to extract haplotypes of KIV-2 UMI data'
    author                                = 'Stephan Amstler'
    homePage                              = 'https://github.com/AmstlerStephan/haplotyping-KIV2-nf.git'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=22.04'
}

// DEFAULT PARAMETERS
params {

	// BASIC PARAMS
	help = false
	version = false
	debug = false

	// INPUT / OUTPUT
	input 									= null	
	ont_pl_dir 								= null
	output 									= null
	variant_calling_positions 				= null
	number_of_samples						= null
	bam_pattern 							= "masked_consensus.bam"
	cluster_stats_pattern 					= "split_cluster_stats.tsv"
	min_reads_per_cluster 					= 10
	max_reads_per_cluster 					= 200
	max_edit_distance 						= 2
	use_variant_calling_positions 			= false
	ranges_to_exclude 						= "2472,2506"
	min_qscore 								= 45
	output_format 							= "fasta"


	threads = (Runtime.runtime.availableProcessors() - 1)

}


// NEXTFLOW PROFILES
profiles {

	// -profile standard
	standard {
		includeConfig "${baseDir}/config/base.config"
	}

	// -profile conda
	conda {
		includeConfig "${baseDir}/config/base.config"
		process.conda = "$baseDir/env/environment.yml"
	}

	// -profile docker
	docker {
		includeConfig "${baseDir}/config/base.config"
		docker.enabled = true
		process.container = 'ecseq/dnaseq'
	}

	// -profile test
	test {
		includeConfig "${baseDir}/config/base.config"
		includeConfig "${baseDir}/config/test.config"
	}

	// -profile custom
	custom {
		// Don't load any config (for use with custom home configs)
	}
}

// NEXTFLOW REPORTING # this defines pipeline metadata
dag {
	enabled = true
	overwrite = true 
	file = "${params.output}/dag.svg"
}
report {
	enabled = true
	overwrite = true
	file = "${params.output}/report.html"
}
timeline {
	enabled = true
	overwrite = true
	file = "${params.output}/timeline.html"
}
trace {
	enabled = true
	overwrite = true
	file = "${params.output}/trace.txt"
}
