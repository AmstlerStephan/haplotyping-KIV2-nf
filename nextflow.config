Skip to content
Search or jump toâ€¦
Pull requests
Issues
Codespaces
Marketplace
Explore
 
@AmstlerStephan 
AmstlerStephan
/
post_pipeline_analysis
Public
generated from AmstlerStephan/Nextflow_Template_Pipeline
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
post_pipeline_analysis/nextflow.config
@AmstlerStephan
AmstlerStephan renaming and implementing parse_metrics
Latest commit aaa1d2e 12 days ago
 History
 1 contributor
94 lines (78 sloc)  1.93 KB

// PRIMARY NEXTFLOW.CONFIG
// This file contains all default parameters, profiles, pipeline metadata

// NEXTFLOW MANIFEST
manifest {
    name                                  = 'QC'
    version                               = '0.1.0'
    description                           = 'Nextflow pipeline to qc nanopore data'
    author                                = 'Stephan Amstler'
    homePage                              = 'https://github.com/AmstlerStephan/Nanopore_QC.git'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=22.04'
}

// DEFAULT PARAMETERS
params {

	// BASIC PARAMS
	help = false
	version = false
	debug = false

	// INPUT / OUTPUT
	input = "./"	
	output = "haplotyping"
	sample_sheet = "Barcode_Sample_overview.js"
	bam_pattern = "final.bam"

	umi_cutoff_R9 = 0.0085
	umi_cutoff_V14 = 0.005
	
	all_runs = true 

}


// NEXTFLOW PROFILES
profiles {

	// -profile standard
	standard {
		includeConfig "${baseDir}/config/base.config"
	}

	// -profile conda
	conda {
		includeConfig "${baseDir}/config/base.config"
		process.conda = "$baseDir/env/environment.yml"
	}

	// -profile docker
	docker {
		includeConfig "${baseDir}/config/base.config"
		docker.enabled = true
		process.container = 'ecseq/dnaseq'
	}

	// -profile test
	test {
		includeConfig "${baseDir}/config/base.config"
		includeConfig "${baseDir}/config/test.config"
	}

	// -profile custom
	custom {
		// Don't load any config (for use with custom home configs)
	}
}

// NEXTFLOW REPORTING # this defines pipeline metadata
dag {
	enabled = true
	overwrite = true 
	file = "${params.output}/dag.svg"
}
report {
	enabled = true
	overwrite = true
	file = "${params.output}/report.html"
}
timeline {
	enabled = true
	overwrite = true
	file = "${params.output}/timeline.html"
}
trace {
	enabled = true
	overwrite = true
	file = "${params.output}/trace.txt"
}
